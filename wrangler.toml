# Blaze Sports Intel - CloudFlare Workers Configuration
# Production deployment configuration

name = "blazesportsintel-api"
main = "api/endpoints/index.js"
compatibility_date = "2024-01-01"

# Account and deployment settings
account_id = "${CF_ACCOUNT_ID}"
workers_dev = false
route = "blazesportsintel.com/api/*"

# Environment variables
[vars]
ENVIRONMENT = "production"
SITE_URL = "https://blazesportsintel.com"
TIMEZONE = "America/Chicago"
USER_AGENT = "BlazeSportsIntelBot/1.0"
CACHE_TTL = "300"
MAX_RESULTS = "100"

# KV Namespaces for caching
[[kv_namespaces]]
binding = "CACHE"
id = "blazesportsintel_cache"
preview_id = "blazesportsintel_cache_preview"

[[kv_namespaces]]
binding = "SESSIONS"
id = "blazesportsintel_sessions"
preview_id = "blazesportsintel_sessions_preview"

[[kv_namespaces]]
binding = "RATE_LIMITS"
id = "blazesportsintel_ratelimits"
preview_id = "blazesportsintel_ratelimits_preview"

# R2 Storage buckets
[[r2_buckets]]
binding = "MEDIA_STORAGE"
bucket_name = "blazesportsintel-media"
preview_bucket_name = "blazesportsintel-media-preview"

[[r2_buckets]]
binding = "DATA_STORAGE"
bucket_name = "blazesportsintel-data"
preview_bucket_name = "blazesportsintel-data-preview"

[[r2_buckets]]
binding = "YOUTH_DATA"
bucket_name = "blazesportsintel-youth"
preview_bucket_name = "blazesportsintel-youth-preview"

# D1 Database for structured data
[[d1_databases]]
binding = "DB"
database_name = "blazesportsintel"
database_id = "blazesportsintel-prod"

# Durable Objects for real-time features
[[durable_objects.bindings]]
name = "LIVE_GAMES"
class_name = "LiveGameTracker"
script_name = "api/realtime/live-games.js"

[[durable_objects.bindings]]
name = "WEBSOCKET_ROOMS"
class_name = "WebSocketRoom"
script_name = "api/realtime/websocket-room.js"

# Analytics Engine
[[analytics_engine_datasets]]
binding = "ANALYTICS"
dataset = "blazesportsintel_analytics"

# Service bindings for microservices
[[services]]
binding = "TEXAS_HS_SERVICE"
service = "texas-hs-football-service"
environment = "production"

[[services]]
binding = "PERFECT_GAME_SERVICE"
service = "perfect-game-service"
environment = "production"

[[services]]
binding = "NCAA_SERVICE"
service = "ncaa-sports-service"
environment = "production"

# Build configuration
[build]
command = "npm run build:api"
watch_paths = ["api/**/*.js", "packages/**/*.js"]

[build.upload]
format = "modules"
main = "./api/endpoints/index.js"

# Development environment
[env.development]
name = "blazesportsintel-api-dev"
vars = { ENVIRONMENT = "development" }
route = "dev.blazesportsintel.com/api/*"

[[env.development.kv_namespaces]]
binding = "CACHE"
id = "blazesportsintel_cache_dev"

[[env.development.r2_buckets]]
binding = "MEDIA_STORAGE"
bucket_name = "blazesportsintel-media-dev"

# Staging environment
[env.staging]
name = "blazesportsintel-api-staging"
vars = { ENVIRONMENT = "staging" }
route = "staging.blazesportsintel.com/api/*"

[[env.staging.kv_namespaces]]
binding = "CACHE"
id = "blazesportsintel_cache_staging"

[[env.staging.r2_buckets]]
binding = "MEDIA_STORAGE"
bucket_name = "blazesportsintel-media-staging"

# Rate limiting rules
[limits]
cpu_ms = 50
max_request_size = "10MB"

# Triggers for scheduled tasks
[[triggers.crons]]
cron = "0 3 * * *"
route = "/api/internal/roster-update"

[[triggers.crons]]
cron = "0 6 * * *"
route = "/api/internal/standings-refresh"

[[triggers.crons]]
cron = "*/30 * * * *"
route = "/api/internal/live-updates"

[[triggers.crons]]
cron = "0 * * * *"
route = "/api/internal/injury-reports"

# Observability
[observability]
enabled = true
head_sampling_rate = 0.1

# Browser rendering for scraping
[browser]
binding = "BROWSER"

# Queue for async processing
[[queues.producers]]
binding = "QUEUE"
queue = "blazesportsintel-queue"

[[queues.consumers]]
queue = "blazesportsintel-queue"
max_batch_size = 10
max_batch_timeout = 30
max_retries = 3
dead_letter_queue = "blazesportsintel-dlq"

# Tail Workers for logging
[[tail_consumers]]
service = "blazesportsintel-logger"

# Compatibility flags
compatibility_flags = [
  "nodejs_compat",
  "streams_enable_constructors"
]

# Placement hints for performance
[placement]
mode = "smart"